import numpy as np
import matplotlib.pyplot as plt
from textwrap import wrap
import matplotlib.ticker as ticker
'''#создаем массив напряжений
data = open('data.txt', 'r')
d = data.read().split("\n")
data_array = np.loadtxt("data.txt", dtype = float)
#заносим данные сеттинга в массив
settings = open ('settings.txt', 'r')
s = settings.read().split("\n")
set_array = np.loadtxt("settings.txt", dtype = float)

#создаем массив времени
settime = np.array ([i * ( 1 / set_array[0] ) for i in range(data_array.size)])
#указываем параметры нашей фигуры
fig, ax = plt.subplots(figsize = (16, 10), dpi = 500)'''





with open('settings.txt') as file:
    settings=[float(i) for i in file.read().split('\n')]
#считываем показания компаратора и переводим через шаг квантования в вольиты
data_array = np.loadtxt('data.txt', dtype = float) 
#массив времен, создаваемый черед количество измерений и известный шаг по времени
settime = np.array([i* ( 1 / settings[0]) for i in range(data_array.size)])
#параметры фигуры
fig, ax = plt.subplots(figsize=(16, 10), dpi = 500)



#минимальные и максимальные значения для осей
ax.axis([data_array.min(), settime.max() + 1, data_array.min(), data_array.max() + 0.2])

#  Устанавливаем интервал основных делений:
ax.xaxis.set_major_locator(ticker.MultipleLocator(2))
#  Устанавливаем интервал вспомогательных делений:
ax.xaxis.set_minor_locator(ticker.MultipleLocator(0.5))

#  Тоже самое проделываем с делениями на оси "y":
ax.yaxis.set_major_locator(ticker.MultipleLocator(0.5))
ax.yaxis.set_minor_locator(ticker.MultipleLocator(0.1))

#название графика с условием для переноса строки и центрированием
ax.set_title("\n".join(wrap('Процесс заряда и разряда конденсатора в RC-цепи', 60)), loc = 'center') 

#сетка основная и второстепенная
ax.grid(which='major', color = 'k')
ax.minorticks_on()
ax.grid(which='minor', color = 'gray', linestyle = ':') 



#plt.text( 502, 0.3,'hgxcv = ' + '1')

ax.plot( settime, data_array, c = 'black', linewidth = 1, label = 'V(t)' )
ax.scatter(settime[0:data_array.size:20], data_array[0:data_array.size:20], marker = 's', c = 'blue', s=10)

ax.legend(shadow = False, loc = 'right', fontsize = 30)


#подпись осей
ax.set_ylabel("Напряжение, В")
ax.set_xlabel("Время, с")

plt.show()

#сохранение
fig.savefig('graph.png')
